---
- hosts: all
  # run this: ansible-playbook -i raspberrypi.local, -u pi configure-rpi.yaml -e new_hostname=barrybig -e domain="snb-home"
  # configure your local raspi server with the basics

  tasks:
  - name: get secrets
    include_vars: file=secrets.yaml

    # for home assistant
  - name: change password
    user:
      name: pi
      password: "{{  rpipass  }}" 
      update_password: always
    become: yes

  - name: stop unnecessary stuff
    systemd: name="{{ item }}" state=stopped enabled=no
    become: yes
    with_items:
      - hciuart
      - bluetooth
      - wpa_supplicant
      - dhcpcd
      - alsa-state

  - name: upgrade system
    become: yes
    apt:
      # upgrade: dist
      upgrade: full
  
  - name: remove unnecessary packages
    become: yes
    apt:
      state: absent
      autoremove: yes
      name: "{{ packages }}"
    vars:
      packages:
        - wolfram-engine
        - sonic-pi
        - bluej
        - greenfoot

  - name: install necessary packages
    become: yes
    apt: 
      update_cache: yes
      cache_valid_time: 86400
      name: "{{ packages }}"
    vars:
      packages:
      - git
      - emacs
      - vim-nox
      - syncthing

  - name: start syncthing
    systemd: name=syncthing state=restarted daemon_reload=yes enabled=yes scope=user

  - name: run stuff
    command: "{{ item }}"
    become: yes
    with_items:
      - "timedatectl set-timezone {{ timezone }}"

  # - name: get spacemacs
  #   git:
  #     # repo: ssh://git@github.com:oneyb/config.git
  #     repo: https://github.com/syl20bnr/spacemacs 
  #     dest: "{{ ansible_user_home }}/.emacs.d/"
  #     update: yes

  # - name: install spacemacs packages
  #   command: "emacs --daemon | yes"

  - name: get config
    git:
      # repo: ssh://git@github.com:oneyb/config.git
      repo: https://github.com/oneyb/config.git
      dest: "{{ ansible_env.HOME }}/documents/config"
      update: yes
      force: yes

  - name: install config
    copy: 
      file: "{{ ansible_env.HOME }}/documents/config/.saveme-spacemacs"
      dest: "{{ ansible_env.HOME }}/.emacs"
      remote_src: yes

  - name: install (spac)emacs packages
    command: "emacs | yes"

  # - name: install config
  #   command: bash documents/config/.copy-config.sh in

  - name: make ~/bin
    file:
      path: "{{ ansible_env.HOME }}/bin"
      state: directory

    
  # - name: install vim-plug NOW managed from VIM
  #   get_url:
  #     url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  #     dest: "{{ ansible_env.HOME }}/.vim/autoload/plug.vim"
  # - name: install vim plug-ins
  #   command: vim +PlugInstall +qall

  - name: add basic command line control
    lineinfile: dest="{{ item.dest }}" line="{{ item.line }}"
    with_items:
      - { dest: "{{ ansible_env.HOME }}/.bashrc", line: "set -o vi" }
      - { dest: "{{ ansible_env.HOME }}/.bashrc", line: "alias ll='ls -al'" }


  # - name: set uart according to 'https://hallard.me/enable-serial-port-on-raspberry-pi/'
  # - replace:
  #     path: /boot/config.txt
  #     regexp: 'enable_uart=0'
  #     replace: 'enable_uart=1' 
  #     become: yes
  #     # backup: yes
  # # SEE BELOW

  # - name: set raspberry options
  #   command: {{ item | quote }}
  #   become: yes
  #   with_items:
  #     # - raspi-config nonint do_expand_rootfs
  #     # - raspi-config nonint do_hostname {{ hostname }}
  #     # - raspi-config nonint do_boot_behaviour B1
  #     # - raspi-config nonint do_boot_behaviour B2
  #     # - raspi-config nonint do_boot_behaviour B3
  #     # - raspi-config nonint do_boot_behaviour B4
  #     # - raspi-config nonint do_boot_wait 1
  #     # - raspi-config nonint do_boot_splash 1
  #     # - raspi-config nonint do_overscan 1
  #     # - raspi-config nonint do_camera 1
  #     # - raspi-config nonint do_ssh 1
  #     # - raspi-config nonint do_vnc 1
  #     # - raspi-config nonint do_spi 1
  #     # - raspi-config nonint do_i2c 1
  #     - raspi-config nonint do_serial 1
  #     # - raspi-config nonint do_onewire 1
  #     # - raspi-config nonint do_rgpio 1
  #     # - raspi-config nonint do_overclock %s
  #     # - raspi-config nonint do_memory_split 1
  #     # - raspi-config nonint do_resolution %d %d
  #     # - raspi-config nonint do_wifi_country %s

  # - name: set serial to on
  #   command: raspi-config nonint dtoverlay=pi3-disable-bt
  #   become: yes


  - name: change hostname to own
    become: yes
    replace:
      path: /etc/hosts
      after: '127\.0\..*$'
      regexp: '127\.0\..*$'
      replace: '127.0.1.1\t{{ domain }} {{ new_hostname }}'

  - name: restart server
    shell: sleep 2 && systemctl reboot
    async: 1
    poll: 0
    become: yes
    ignore_errors: true

  - name: waiting for server to come back after reboot
    wait_for_connection:

  # - name: wait for rebooted computer to test for changes
  #   local_action: wait_for host="{{ new_hostname }}.local" state=started
